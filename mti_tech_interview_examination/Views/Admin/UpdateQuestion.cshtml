@{
    ViewBag.Title = "Home Page";
}

@using mti_tech_interview_examination.Models
@using mti_tech_interview_examination.Common
@model QuestionModel

@{ 
    int count = 0;
    int questionCount = 0;
    if (Model != null)
    {
        questionCount = Model.AnswerContents.Count();
    }
}
@if (Model != null)
{
<form class="form-wrapper" id="QuestionFormWrapper" action="" method="post">
    <div class="title-1">Update Question</div>
    
    <div id="QuestionForm">
        <div class="form-line">
            @Html.HiddenFor(m => m.Id)
            @Html.LabelFor(m => m.QuestionLevel) *<br />
            @Html.RadioButtonFor(m => m.QuestionLevel, CommonModel.QuestionLevel.Easy, new Dictionary<string, string> { { "data-val-required-radio", "Please select level" }, { "data-val", "true" }})<span>Easy</span>
            @Html.RadioButtonFor(m => m.QuestionLevel, CommonModel.QuestionLevel.Normal, new Dictionary<string, string> { { "data-val-required-radio", "Please select level" }, { "data-val", "true" }})<span>Normal</span>
            @Html.RadioButtonFor(m => m.QuestionLevel, CommonModel.QuestionLevel.Hard, new Dictionary<string, string> { { "data-val-required-radio", "Please select level" }, { "data-val", "true" }})<span>Hard</span>
            
        </div>

        <div class="form-line">
            @Html.LabelFor(m => m.QuestionName) *
            @Html.TextBoxFor(m => m.QuestionName, new { @class = "form-control" })
        </div>
        <div class="form-line">
            @Html.LabelFor(m => m.QuestionContent) *
            @Html.TextAreaFor(m => m.QuestionContent, new { @class = "form-control", rows = 5 })
        </div>
        
        <div class="form-line">
            @Html.LabelFor(m => m.QuestionType) *<br />
            @Html.RadioButtonFor(m => m.QuestionType, CommonModel.QuestionType.Selection, new Dictionary<string, string> { { "data-val-required-radio", "Please select type" }, { "data-val", "true" }})<span>Selection</span>
            @Html.RadioButtonFor(m => m.QuestionType, CommonModel.QuestionType.MultiSelection, new Dictionary<string, string> { { "data-val-required-radio", "Please select type" }, { "data-val", "true" }})<span>MultiSelection</span>
            @Html.RadioButtonFor(m => m.QuestionType, CommonModel.QuestionType.Text, new Dictionary<string, string> { { "data-val-required-radio", "Please select type" }, { "data-val", "true" }})<span>Text</span>

        </div>
        
        <div id="AnswerPanel">
            @while (count < Const.MaxAnswerCount)
            {
                string content = string.Empty;
                string isChecked = string.Empty;
                int answerId = 0;
                if(count < Model.AnswerContents.Count())
                {
                    content = Model.AnswerContents[count];
                    answerId = Model.AnswerIds[count];
                    isChecked = (Model.CorrectAnswerIndexes.Contains(answerId)) ? "checked='checked'" : string.Empty;
                }
                @Model.AnswerContents[count]
                <div class="form-line">
                    <label>Answer @(count + 1)</label>
                    <input type="text" name="AnswerContents" class="form-control" value="@content" />
                    <input type="checkbox" value="@count" @isChecked name="CorrectAnswerIndexes" class="checkbox-choice" />
                    <input type="radio" value="@count"  @isChecked name="CorrectAnswerIndexes" class="radio-choice" />
                    <input type="hidden" name="AnswerIds" value="@answerId"/>
                </div>

                count++;
            }
            
        </div>

        <div class="text-right">
            <input id="CancelButton" type="button" value="Cancel" onclick="javascript: location = '/Admin/ListQuestions';" class="btn btn-default btn-default" />
            <input id="SubmitButton" type="submit" value="Update" class="btn btn-default btn-info" />
        </div>
    </div>

</form>
}
@section scripts{
    <script>
        $.validator.unobtrusive.adapters.addBool("required-radio", "required");
        $(function () {
            var admin = new Site.Logic();
            admin.handleQuestionUpdateEvent();
        })
        
    </script>
}