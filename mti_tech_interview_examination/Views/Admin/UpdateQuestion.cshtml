@{
    ViewBag.Title = "Home Page";
}

@using mti_tech_interview_examination.Models
@using mti_tech_interview_examination.Common
@model QuestionModel

@{ 
    int count = 0;
    int questionCount = 0;
    if (Model != null)
    {
        questionCount = Model.AnswerContents.Count();
    }
}
@if (Model != null)
{
<form class="form-wrapper" id="QuestionFormWrapper" action="" method="post">
    <div class="title-1">Update Question @Html.Partial("_Menu")</div>
    
    <div id="QuestionForm">
        <div class="form-line">
            @Html.HiddenFor(m => m.Id)
            @Html.LabelFor(m => m.QuestionLevel) *<br />
            @Html.RadioButtonFor(m => m.QuestionLevel, CommonModel.QuestionLevel.Easy, new Dictionary<string, string> { { "data-val-required-radio", "Please select level" }, { "data-val", "true" }})<span>Easy</span>
            @Html.RadioButtonFor(m => m.QuestionLevel, CommonModel.QuestionLevel.Normal, new Dictionary<string, string> { { "data-val-required-radio", "Please select level" }, { "data-val", "true" }})<span>Normal</span>
            @Html.RadioButtonFor(m => m.QuestionLevel, CommonModel.QuestionLevel.Hard, new Dictionary<string, string> { { "data-val-required-radio", "Please select level" }, { "data-val", "true" }})<span>Hard</span>
            
        </div>

        <div class="form-line">
            @Html.LabelFor(m => m.QuestionName) *
            @Html.TextBoxFor(m => m.QuestionName, new { @class = "form-control" })
        </div>
        <div class="form-line">
            @Html.LabelFor(m => m.QuestionContent) *
            @Html.TextAreaFor(m => m.QuestionContent, new { @class = "form-control", rows = 5 })
        </div>
        
        <div class="form-line">
            @Html.LabelFor(m => m.QuestionType) *<br />
            @Html.RadioButtonFor(m => m.QuestionType, CommonModel.QuestionType.Selection, new Dictionary<string, object> { { "data-val-required-radio", "Please select type" }, { "data-val", "true" }, { "onclick", "javascript: return false;" } })<span>Selection</span>
            @Html.RadioButtonFor(m => m.QuestionType, CommonModel.QuestionType.MultiSelection, new Dictionary<string, object> { { "data-val-required-radio", "Please select type" }, { "data-val", "true" }, { "onclick", "javascript: return false;" } })<span>MultiSelection</span>
            @Html.RadioButtonFor(m => m.QuestionType, CommonModel.QuestionType.Text, new Dictionary<string, object> { { "data-val-required-radio", "Please select type" }, { "data-val", "true" }, { "onclick", "javascript: return false;" } })<span>Text</span>
            
        </div>
        @if (Model.QuestionType != CommonModel.QuestionType.Text)
        {


        <div id="AnswerPanel">
            @while (count < Model.AnswerContents.Count())
            {
                string content = string.Empty;
                string isChecked = string.Empty;
                int answerId = 0;
               
                content = Model.AnswerContents[count];
                answerId = Model.AnswerIds[count];
                isChecked = (Model.CorrectAnswerIndexes.Contains(answerId)) ? "checked='checked'" : string.Empty;
                
                <div class="form-line">
                    <label>Answer @(count + 1)</label>
                    <input type="text" name="AnswerContents" class="form-control" value="@content" />
                    <input type="checkbox" value="@count" @isChecked name="CorrectAnswerIndexes" class="checkbox-choice" />
                    <input type="radio" value="@count"  @isChecked name="CorrectAnswerIndexes" class="radio-choice" />
                    <input type="hidden" name="AnswerIds" value="@answerId"/>
                </div>

                count++;
            }
            
        </div>
        }
        else
        {
            <div id="AnswerTextPanel">
                Suggested answer:
                <div class="form-line"><input type="text" name="AnswerContents" class="form-control" value="@(Model.AnswerContents != null && Model.AnswerContents.Count() > 0? Model.AnswerContents[0]: string.Empty )" /></div>
                <input type="hidden" name="AnswerIds" value="@(Model.AnswerIds != null && Model.AnswerIds.Count() > 0? Model.AnswerIds[0].ToString(): string.Empty )" />
            </div>
        }

        <div class="text-right" style="position:relative; margin-top:20px">
            <input id="CancelButton" type="button" value="Cancel" onclick="javascript: location = '/Admin/ListQuestions';" class="btn btn-default btn-default" />
            <input id="SubmitButton" type="submit" value="Update" class="btn btn-default btn-info" />
            <button id="DeleteButton" type="button" class="btn btn-default btn-danger" data-toggle="modal" data-target="#DeleteModal">Delete</button>
        </div>
    </div>

</form>

<div class="modal fade" id="DeleteModal" tabindex="-1" role="dialog" aria-labelledby="DeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="DeleteModalLabel">Delete question</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Do you really want to delete this question?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <form action="/Admin/DeleteQuestion" method="post" style="display:inline-block">
                    <input type="hidden" value="@Model.Id" name="questionId"/>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>
}
@section scripts{
    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>
    <script>
        $.validator.unobtrusive.adapters.addBool("required-radio", "required");
        $(function () {
            var admin = new Site.Logic();
            admin.handleQuestionUpdateEvent();
        })
        
    </script>
}
